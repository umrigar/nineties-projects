{
  read [vs0];
  G2558: xpp := cons_xpp(~ init, vs0);
  code := ~ ([read [right]|G3654] - G3654);
  marked := ~ [];
  pending := add_new_xpp(xpp, ~ [], marked, ~ [init - [q],lab181 - [q,qTail],lab192 - [q,nextLabel]]);
  if pending \= ~ [] then goto G4471 else goto G4529;
  G4471: xpp := hd(pending);
  pending := tl(pending);
  marked := cons(xpp, marked);
  pp := arg(~ 1, xpp);
  vs := arg(~ 2, xpp);
  if pp == ~ init then goto G6655 else goto G6713;
  G6655: code := extend_code(code, xlabel(xpp));
  vs := store_update(vs, ~ qTail, eval(~ q, vs));
  code := extend_code(code, cons_assgn(~ left, reduce(~ (~ []), vs)));
  if eval(~ (qTail \= ~ []), vs) then goto G12441 else goto G12499;
  G12441: vs := store_update(vs, ~ instruction, eval(~ first_instruction(qTail), vs));
  vs := store_update(vs, ~ qTail, eval(~ rest(qTail), vs));
  vs := store_update(vs, ~ operator, eval(~ instruction_operator(instruction), vs));
  if eval(~ (instruction = ~ right), vs) then goto G18787 else goto G18845;
  G18787: code := extend_code(code, cons_assgn(~ left, reduce(~ cons(first_sym(right), left), vs)));
  code := extend_code(code, cons_assgn(~ right, reduce(~ tl(right), vs)));
  if eval(~ (qTail \= ~ []), vs) then goto G12441 else goto G12499;
  G18845: if eval(~ (instruction = ~ left), vs) then goto G27338 else goto G27396;
  G27338: code := extend_code(code, cons_assgn(~ right, reduce(~ cons(first_sym(left), right), vs)));
  code := extend_code(code, cons_assgn(~ left, reduce(~ tl(left), vs)));
  if eval(~ (qTail \= ~ []), vs) then goto G12441 else goto G12499;
  G27396: if eval(~ (instruction = ~ write(G1829)), vs) then goto G35889 else goto G35947;
  G35889: vs := store_update(vs, ~ symbol, eval(~ arg(1, instruction), vs));
  code := extend_code(code, cons_assgn(~ right, reduce(~ cons(symbol, tl(right)), vs)));
  if eval(~ (qTail \= ~ []), vs) then goto G12441 else goto G12499;
  G35947: if eval(~ (instruction = ~ (goto G1855)), vs) then goto G44428 else goto G44486;
  G44428: vs := store_update(vs, ~ nextLabel, eval(~ arg(1, instruction), vs));
  vs := store_update(vs, ~ qTail, eval(~ new_tail(nextLabel, q), vs));
  if eval(~ (qTail \= ~ []), vs) then goto G12441 else goto G12499;
  G44486: if eval(~ (instruction = ~ if(G1879, G1880)), vs) then goto G52955 else goto G53013;
  G52955: vs := store_update(vs, ~ symbol, eval(~ arg(1, instruction), vs));
  vs := store_update(vs, ~ nextLabel, eval(~ arg(2, instruction), vs));
  then_xpp := cons_xpp(~ lab192, vs);
  else_xpp := cons_xpp(~ lab181, vs);
  pending := add_new_xpp(else_xpp, pending, marked, ~ [init - [q],lab181 - [q,qTail],lab192 - [q,nextLabel]]);
  pending := add_new_xpp(then_xpp, pending, marked, ~ [init - [q],lab181 - [q,qTail],lab192 - [q,nextLabel]]);
  code := extend_code(code, cons_if(reduce(~ (symbol = first_sym(right)), vs), then_xpp, else_xpp));
  if pending \= ~ [] then goto G4471 else goto G4529;
  G53013: code := extend_code(code, cons_return(reduce(~ (~ error), vs)));
  if pending \= ~ [] then goto G4471 else goto G4529;
  G12499: code := extend_code(code, cons_return(reduce(~ right, vs)));
  if pending \= ~ [] then goto G4471 else goto G4529;
  G6713: if pp == ~ lab192 then goto G103497 else goto G103745;
  G103497: code := extend_code(code, xlabel(xpp));
  vs := store_update(vs, ~ qTail, eval(~ new_tail(nextLabel, q), vs));
  if eval(~ (qTail \= ~ []), vs) then goto G12441 else goto G12499;
  G103745: if pp == ~ lab181 then goto G160852 else goto G161100;
  G160852: code := extend_code(code, xlabel(xpp));
  if eval(~ (qTail \= ~ []), vs) then goto G12441 else goto G12499;
  G161100: code := extend_code(code, xlabel(xpp));
  if eval(~ (qTail \= ~ []), vs) then goto G12441 else goto G12499;
  G4529: return complete_code(code)
} .
